-- 1. list all students in the system
select * from students;

-- 2. list students enrolled in the 'introduction to databases' course
select s.student_id, s.first_name, s.last_name, c.course_name
from students s
join enrollments e on s.student_id = e.student_id
join courses c on e.course_id = c.course_id
where c.course_name = 'introduction to databases';

-- 3. count the number of students enrolled in each course
select c.course_name, count(e.student_id) as number_of_students
from courses c
join enrollments e on c.course_id = e.course_id
group by c.course_name;

-- 4. calculate the average grade for each course
select c.course_name, avg(case 
                             when g.grade = 'A' then 4.0
                             when g.grade = 'B+' then 3.5
                             when g.grade = 'B' then 3.0
                             when g.grade = 'C+' then 2.5
                             when g.grade = 'C' then 2.0
                             else 0
                         end) as average_grade
from courses c
join grades g on c.course_id = g.course_id
group by c.course_name;

-- 5. find students with gpa greater than 3.0
select s.student_id, s.first_name, s.last_name, 
       avg(case 
               when g.grade = 'A' then 4.0
               when g.grade = 'B+' then 3.5
               when g.grade = 'B' then 3.0
               when g.grade = 'C+' then 2.5
               when g.grade = 'C' then 2.0
               else 0
           end) as gpa
from students s
join grades g on s.student_id = g.student_id
group by s.student_id
having gpa > 3.0;

-- 6. list courses taught by a specific instructor (e.g. sarah brown)
select c.course_name
from courses c
join instructors i on c.instructor_id = i.instructor_id
where i.first_name = 'sarah' and i.last_name = 'brown';

-- 7. list students not enrolled in any course
select s.student_id, s.first_name, s.last_name
from students s
left join enrollments e on s.student_id = e.student_id
where e.student_id is null;

-- 8. list all courses with no enrollments
select c.course_name
from courses c
left join enrollments e on c.course_id = e.course_id
where e.course_id is null;

-- 9. list courses and instructors for a specific department (e.g. computer science)
select c.course_name, i.first_name, i.last_name
from courses c
join instructors i on c.instructor_id = i.instructor_id
where c.department = 'computer science';

-- 10. find total credits enrolled by each student
select s.student_id, s.first_name, s.last_name, sum(c.credit_hours) as total_credits
from students s
join enrollments e on s.student_id = e.student_id
join courses c on e.course_id = c.course_id
group by s.student_id;
